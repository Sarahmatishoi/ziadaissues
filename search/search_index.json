{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ziada use cases As a client, I would like to sign up: Sign up screen Create data models for holding the attributes of sign up Verification for verifying the new account Database for storing the data of the client signup credential. As a client, I would like to log in : Login screen Authentication to check if the user has entered a valid username and password. Create data models for holding the client attributes Verification for verifying the existing account Database for pulling the client login credential from. As a Client I would like to set up my profile: Set up profile screen Create a data model to hold the attributes of the client profile Database for storing the data of the client profile information Validation for validating if the user have entered the valid credentials As a user I would like to reset my password: Reset password Screen Validation of the password Create a data model to hold the attributes of resetting the password Send an email for verifying the password. Database for storing the data of the resseting password As a client I would like to explore different available services: Explore screen Data models for holding the attributes of the different services Database for storing the data of the services As a client I would like to view and explore different categories of services Explore Service category screen Filters for filtering different service categories. Create the data model for holding the attributes of the service category Database for storing the data of services category As a client I would like to be able to view different service subcategories. Service sub-category screen Data models for holding the attributes of the service sub-category Dtabase for storing the data of service sub- category As a client I would like to search on different services Searching screen Filters that will help in filtering the search that is requested by the client. Database for pulling the data from. As a client, I would like to view the service that I have requested. Service requested screen Create a data model for holding the attributes of the requested services As a client I would like to get service provider details. Service provider screen Filter for filtering service providers according to their location. Create the data model for holding the attributes of the service provider. Database for pulling the data of the service provider. As a Client I would like to view the service reviews of other clients. Screen for service reviews. Create a data model for holding the attributes of the service reviews Database for pulling the data of service reviews As a client, I would like to get client reviews Client reviews screen Create a data model for holding the data of the client review Database for holding the data of the client reviews As a client, I would like to access the terms and conditions of the application. Terms and condition screen Database for storing the data of terms and condition Create a data model for holding the terms and condition attributes As a client I would like to be able to access the chat in case of any challenges. Chat screen Create a data model for holding the attributes of the chats Database for storing all the messages from the clients. As a client, I would like to access the setting Setting screen Create a data models for holding the attributes of the setting Database for holding the data of the settings As a client I would like to choose a service provider Screen for choosing a service provider Filters for filtering the service provider according to the location Create a data model for holding the data of choosing the service provider Database for holding the data of a service provider As a service provider I would like to signup Sing up screen Create a data model for holding the attributes of the service provider credentials Database for storing the data of the service provider. As a service provider I would like to set up my profile. Set up profile screen Create a data model for holding the attributes of the service provider profile information Database for storing the data of the service provider profile information. As a service provider I would like to be able to choose my preferred profile. Screen for the option of choosing the profile Create a data model that will hold the attributes of the profile. Database for storing the data of the profile information. As a service provider I would like to be able to add the service to the category Add service screen Create a data model that will hold the attributes of the service category. Database for storing the data of the category information. As a service provider I would like to be able to add the sub-category services Sub-category screen Create a data model that will hold the attributes of the subcategories information. Database for storing the data of the subcategories information As a service provider I would like to be able to add the service tags Service tag screen Database for storing the data of the service tags information Create data models for holding the attributes of the service tags","title":"Home"},{"location":"#ziada-use-cases","text":"","title":"Ziada use cases"},{"location":"backend/","text":"Client data model for holding the attributes of sign up backend/models/users_mdls.js(var usersSchema=new Schema) Client data model for holding the attributes of sign up backend/models/users_mdls.js(var usersSchema=new Schema) Client Authentication to check if the user has entered a valid username and password for login. Client data models for holding the client attributes of login backend/models/users_mdls.js(var usersSchema=new Schema) Client data model for holding the attributes of the client profile setup backend/models/users_mdls.jsVar UsersSchema = new Schema) Client data model for holding the attributes of resetting the password backend/services/users_srv.js Async function reset_password) Send email for verifying client reset password. backend/interfaces/email.js(const sendEmail=async(to,subject,content,attachment) Data models for holding the attributes of the different services backend/models/services_mdls.js(Var ServicesSchema ) Data model for holding the attributes of the service category backend/models/service_category_mdls.js(var ServiceCategorySchema = new Schema) Data models for holding the attributes of the service sub-category backend/models/service_sub_category_mdls.js(var ServiceSubCategorySchema) Data model for holding the attributes of the service provider. backend/models/service_provider_mdls.js(var ServiceProviderSchema = new Schema) data model for holding the data of the client review backend/models/reviews_mdls.js(var ReviewSchema = new Schema) Data model for getting the client review backend/controllers/review_ctrl.js(var ReviewSchema = new Schema) Data model for holding the terms and condition attributes backend/models/terms_condition_mdls.js(Var TncSchema=new Schema)","title":"Backend"},{"location":"frontend/","text":"Client Sign up screen kazi/app/java/ke.co.kaziapp/ui/v1/register activity.kt(class RegisterActivity : NetworkSensingBaseActivity) Client Verification for verifying the new account kazi/appjava/ke.co.kaziapp/ui/v1/GetOtpActivity.kt(class GetOtpActivity : NetworkSensingBaseActivity) Client Login screen kazi/app/java/ke.co.kaziapp/ui/v1/login activity.kt(class LoginActivity : NetworkSensingBaseActivity) Client Verification for verifying the existing account kazi/app/java/ke.co.kaziapp/ui/v1/GetOtpActivity.kt(class GetOtpActivity : NetworkSensingBaseActivity) Client set up profile screen kazi/app/java/ke.co.kaziapp/ui/v1/profilesetting activity.kt(class ProfileSettingsActivity NetworkSensingBaseActivity) Client Validation for validating if the client have entered the valid credentials of profile setup. kazi/app/java/ke.co.kaziapp/ui/v1/profilesetting activity.kt(private fun validate) Notification screen to notify the client of the new services that are available in the application. kazi/app/java/ke.co.kaziapp/src/main/view/client/inbox/notifications/InboxNotificationsAdapter.kt Client reset password screen kazi/app/java/ke.co.kaziapp/ui/v1/forgot password Activity/private fun resetPassword Explore service screen kazi/app/java/ke.co.kaziapp/ui/v1/servicelistActivity( class ServicesListActivity : NetworkSensingBaseActivity Validation to validate if the user have entered the valid credentials. kazi/app/java/ke.co.kaziapp/ui/v1/profilesetting activity.kt( private fun validate) Explore Service category screen kazi/app/java/ke.co.kaziapp/ui/v1/service category Activity.kt(class ServiceSubCategoryActivity : NetworkSensingBaseActivity) Service sub-category screen kazi/app/java/ke.co.kaziapp/ui/v1/servicesubcategoryActivity,kt(class ServiceSubCategoryActivity : NetworkSensingBaseActivity) Service provider screen kazi/app/java/ke.co.kaziapp/ui/v1/serviceproviderinfoActivity,kt( class ServiceProviderInfoActivity : AppCompatActivity) Client review screen kazi/app/java/ke.co.kaziapp/ui/v1/review/ClientreviewFragment(class ClientReviewsFragment) Terms and condition screen kazi/app/java/ke.co.kaziapp/ui/v1/terms and conditions Activity,kt( class TermAndConditionsActivity : AppCompatActivity) Chat screen kazi/app/java/ke.co.kaziapp/ui/v1/ChatsActivity.kt( class Terms And Conditions Activity : AppCompatActivity)","title":"Frontend"}]}